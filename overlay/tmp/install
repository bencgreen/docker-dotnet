#!/bin/sh

set -euo pipefail
export BF_E=`basename ${0}`


#======================================================================================================================
# Add www user.
#======================================================================================================================

bf-adduser www


#======================================================================================================================
# Install dotnet dependencies.
#======================================================================================================================

apk add --no-cache \
    ca-certificates \
    krb5-libs \
    libgcc \
    libintl \
    libssl1.1 \
    libstdc++ \
    zlib


#======================================================================================================================
# Ensure target platform is set.
#======================================================================================================================

[[ -z "${TARGETPLATFORM-}" ]] && bf-error "Target platform not set."


#======================================================================================================================
# Get target platform architecture.
#======================================================================================================================

case "${TARGETPLATFORM}" in

    linux/amd64)
        ARCH="x64"
        ;;

    linux/arm64)
        ARCH="arm64"
        ;;

    *)
        bf-error "Unsupported target platform: ${TARGETPLATFORM}."
        ;;

esac

bf-debug "Platform architecture ${ARCH}."


#======================================================================================================================
# Get .NET Version.
#======================================================================================================================

cd /tmp

V=$(cat VERSION)
bf-debug ".NET version ${V}."


#======================================================================================================================
# Download and install .NET Runtime.
#======================================================================================================================

DOTNET=/usr/share/dotnet

if [ "$(echo ${V} | cut -c 1)" == "6" ] ; then
    V="6.0.0-preview.6.21352.12"
    bf-debug "Changing version to ${V}."
fi

RUNTIME_URL="https://dotnetcli.azureedge.net/dotnet/Runtime/${V}/dotnet-runtime-${V}-linux-musl-${ARCH}.tar.gz"
bf-echo "Downloading ${RUNTIME_URL}..."
wget -O dotnet.tar.gz ${RUNTIME_URL}
bf-done

bf-echo "Installing .NET runtime..."
mkdir -p ${DOTNET} \
    && tar -C ${DOTNET} -oxzf dotnet.tar.gz \
    && ln -s ${DOTNET}/dotnet /usr/bin/dotnet

[[ -d ${DOTNET} ]] && bf-done \
    || bf-error ".NET runtime not installed."


#======================================================================================================================
# Download and install ASP.NET Runtime.
#======================================================================================================================

if [ "$(echo ${V} | cut -c 1)" == "6" ] ; then
    V="6.0.0-preview.6.21355.2"
    bf-debug "Changing version to ${V}."
fi

ASPNET_URL="https://dotnetcli.azureedge.net/dotnet/aspnetcore/Runtime/${V}/aspnetcore-runtime-${V}-linux-musl-${ARCH}.tar.gz"
bf-echo "Downloading ${ASPNET_URL}..."
wget -O aspnetcore.tar.gz ${ASPNET_URL}
bf-done

bf-echo "Installing ASP.NET..."
tar -ozxf aspnetcore.tar.gz -C ${DOTNET} ./shared/Microsoft.AspNetCore.App

[[ -d ${DOTNET}/shared/Microsoft.AspNetCore.App/${V} ]] && bf-done \
    || bf-error "ASP.NET runtime not installed."


#======================================================================================================================
# Make app directories.
#======================================================================================================================

bf-debug "Creating /app directories."
mkdir -p /app/live
mkdir /app/publish
