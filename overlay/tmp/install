#!/bin/sh

set -euo pipefail
export BF_E=`basename ${0}`


#======================================================================================================================
# Add www user.
#======================================================================================================================

bf-adduser www


#======================================================================================================================
# Install dotnet dependencies.
#======================================================================================================================

apk add --no-cache \
    ca-certificates \
    icu-libs \
    krb5-libs \
    libgcc \
    libintl \
    libssl1.1 \
    libstdc++ \
    zlib


#======================================================================================================================
# Ensure target platform is set.
#======================================================================================================================

[[ -z "${TARGETPLATFORM-}" ]] && bf-error "Target platform not set."


#======================================================================================================================
# Get target platform architecture.
#======================================================================================================================

case "${TARGETPLATFORM}" in

    linux/amd64)
        ARCH="x64"
        ;;

    linux/arm64)
        ARCH="arm64"
        ;;

    *)
        bf-error "Unsupported target platform: ${TARGETPLATFORM}."
        ;;

esac

bf-echo "Platform architecture ${ARCH}."


#======================================================================================================================
# Get .NET Version.
#======================================================================================================================

cd /tmp

V=$(cat DOTNET_REVISION)
bf-echo ".NET version ${V}."


#======================================================================================================================
# Verify checksum of a dotnet download.
#   1   Either 'runtime' or 'aspnet'
#======================================================================================================================

verify () {

    DL="${ASPNET_VERSION}-${ARCH}-${1}"

    case "${DL}" in

        6-x64-runtime)      HASH="58ca9a0e4fda836f6034a175cf970a722786e97778883519a034c3caa0f6916491a0c03c4ffa9f7b1f346cd7de0f66533ee9d12132aa474c3d8902235f60e98c" ;;
        6-arm64-runtime)    HASH="8c18fabb3b1418915cffbdabcd3b04398f45474818128997329de3a22f7cdc9e894993a958a7a497dc6c335ff56a80f4c2b6205ae0aa16b4dbb8fe3c15bd7088" ;;
        7-x64-runtime)      HASH="83f50faf95a2ba3756da838fe2f3272f18494f5707aa787e6519f2b145107297c20a974221b5a4ef383dc92486c43cf6899f51a8e776c7ed7bcf1855ea2aba15" ;;
        7-arm64-runtime)    HASH="f19984914fd32b4fd7b119d62dc16577aaad3770f0ae9c769a8732f4c23cbc33e3bf3cfe553ad945f27a3e3f72cbef49e741852cd94c3c9f1540c6ef2d9f815d" ;;

        6-x64-aspnet)       HASH="896ea62763519a2c7cc8c426553718aec5975ee98d6d6ff3acde6f6e1918fb2cf5c6c11827d3782bd1e220a58085f0892620b1c0dadeb167b04f6410543c23fd" ;;
        6-arm64-aspnet)     HASH="d109183b5f4ce91a6b4c9d6a5e4e3ec8969ffee86a88bf914cfd11bb08754405daadabdcc96fe0e6d7f3dd138d111d7ee342795699fd33142bc37206ba59d720" ;;
        7-x64-aspnet)       HASH="338bcea165cbb71c2b2b0b69b5e655a33ed568fc24b58bdc7626d20cb62d5bb7cf304edd2a866b19e45e0620902417b973eae499391c0f66970f016f5f065a3e" ;;
        7-arm64-aspnet)     HASH="eff78e22f28184fd41193da4915e8e0e140ddc84c5f748deb3521f114dbe9856e5b1a9bffea8b4ad4543f9ed339e823a4de9e4c4acc0fdecc95d985786ed41ca" ;;

        *)                  bf-error "Unsupported dotnet download: ${DL}." ;;

    esac

    bf-echo "Verifying ${1} download..."
    echo "${HASH}  ${1}.tar.gz" | sha512sum -c -
    bf-done

}


#======================================================================================================================
# Download and install .NET Runtime.
#======================================================================================================================

DOTNET=/usr/share/dotnet

# if [ "$(echo ${V} | cut -c 1)" == "7" ] ; then
#     V="7.0.0-rc.2.22472.3"
#     bf-echo "Changing version to ${V}."
# fi

RUNTIME="runtime"
RUNTIME_URL="https://dotnetcli.azureedge.net/dotnet/Runtime/${V}/dotnet-runtime-${V}-linux-musl-${ARCH}.tar.gz"
bf-echo "Downloading ${RUNTIME_URL}..."
wget -O ${RUNTIME}.tar.gz ${RUNTIME_URL}
bf-done

verify ${RUNTIME}

bf-echo "Installing .NET runtime..."
mkdir -p ${DOTNET} \
    && tar -C ${DOTNET} -oxzf ${RUNTIME}.tar.gz \
    && ln -s ${DOTNET}/dotnet /usr/bin/dotnet

[[ -d ${DOTNET} ]] && bf-done \
    || bf-error ".NET runtime not installed."


#======================================================================================================================
# Download and install ASP.NET Runtime.
#======================================================================================================================

# if [ "$(echo ${V} | cut -c 1)" == "7" ] ; then
#     V="7.0.0-rc.2.22476.2"
#     bf-echo "Changing version to ${V}."
# fi

ASPNET="aspnet"
ASPNET_URL="https://dotnetcli.azureedge.net/dotnet/aspnetcore/Runtime/${V}/aspnetcore-runtime-${V}-linux-musl-${ARCH}.tar.gz"
bf-echo "Downloading ${ASPNET_URL}..."
wget -O ${ASPNET}.tar.gz ${ASPNET_URL}
bf-done

verify ${ASPNET}

bf-echo "Installing ASP.NET..."
tar -ozxf ${ASPNET}.tar.gz -C ${DOTNET} ./shared/Microsoft.AspNetCore.App

[[ -d ${DOTNET}/shared/Microsoft.AspNetCore.App/${V} ]] && bf-done \
    || bf-error "ASP.NET runtime not installed."
